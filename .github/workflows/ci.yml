name: test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

defaults:
  run:
    working-directory: ./mongodb

jobs:

  container-job:
    runs-on: ubuntu-latest

    # runs all of the steps inside the specified container rather than on the
    # VM host.  Because of this the network configuration changes from host
    # based network to a container network.
    container:
      image:  node:10.16-jessie

    services:
      mongodb:
        image: mongo:3.4.23
        ports:
          - 27017:27017

  # Runs all steps on the VM. The service containers will use host port binding
  # instead of container networking so you access them via localhost rather
  # than the service name
  vm-job:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
        # will assign a random free host port
        - 27017/tcp

    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Setup
        run: make setup
      - name: Run test
        run: make test
        env:
          # use mongodb for the host here because we have specified a container
          # for the job.  If we were running the job on the VM this would be
          # localhost
          MONGODB_HOST: mongodb
          MONGODB_PORT: ${{ job.services.mongodb.ports[27017] }}

